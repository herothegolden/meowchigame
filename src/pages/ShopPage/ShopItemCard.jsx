// src/pages/ShopPage/ShopItemCard.jsx
// v5 ‚Äî Inter Font, Unified with App Style (No Logic Change)

import React from "react";
import { Star, LoaderCircle, CheckCircle } from "lucide-react";

const ShopItemCard = ({
  item,
  userPoints,
  onPurchase,
  isOwned,
  ownedQuantity = 0,
  isPurchasing,
  icon,
}) => {
  const canAfford = userPoints >= item.price;

  return (
    <div className="bg-nav p-4 rounded-lg border border-gray-700 flex flex-col justify-between text-primary font-inter">
      {/* Top Section */}
      <div className="flex items-start space-x-3 mb-3">
        <div className="text-accent">{icon}</div>
        <div className="flex flex-col text-left space-y-2">
          {item.name.includes("Time") && (
            <>
              <p className="text-base font-semibold flex items-center text-primary">
                ‚è∞ –¢–∞–π–º-–ë—É—Å—Ç–∏
              </p>
              <p className="text-sm text-secondary">
                –ö–æ–≥–¥–∞ –≤—Ä–µ–º—è ‚Äî –ø—Ä–æ—Å—Ç–æ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç –≤ —Ä–µ—Ü–µ–ø—Ç–µ —Å—á–∞—Å—Ç—å—è.
              </p>
              <p className="text-sm text-secondary">
                +10 —Å–µ–∫—É–Ω–¥ –Ω–∞—Å–ª–∞–∂–¥–µ–Ω–∏—è. –ï—â—ë –Ω–µ–º–Ω–æ–≥–æ, —á—Ç–æ–±—ã —É—Å–ª—ã—à–∞—Ç—å —ç—Ç–æ
                –∏–¥–µ–∞–ª—å–Ω–æ–µ ‚Äú—á–ø–æ–Ω—å–∫!‚Äù ‚Äî –º–æ–º–µ–Ω—Ç —á–∏—Å—Ç—ã—Ö Ï´ÄÎìù-–≤–∏–±–æ–≤.
              </p>
            </>
          )}

          {item.name.includes("Bomb") && (
            <>
              <p className="text-base font-semibold flex items-center text-primary">
                üí£ Ïø†ÌÇ§-–ë–æ–º–±—ã
              </p>
              <p className="text-sm text-secondary">
                –ò–Ω–æ–≥–¥–∞ –∂–∏–∑–Ω—å ‚Äî —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ —Å–ª–∞–¥–∫–∏–π –≤–∑—Ä—ã–≤ –æ–∂–∏–¥–∞–Ω–∏–π.
              </p>
              <p className="text-sm text-secondary">
                Cookie Bomb –æ—á–∏—â–∞–µ—Ç 3√ó3 –ø–æ–ª–µ –∏ –æ—Å—Ç–∞–≤–ª—è–µ—Ç –∑–∞ —Å–æ–±–æ–π –≤–∫—É—Å–Ω—ã–π —Ö–∞–æ—Å.
                Ï´ÄÎìù-–≤–∏–±—ã –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω—ã.
              </p>
            </>
          )}

          {item.name.includes("Points") && (
            <>
              <p className="text-base font-semibold flex items-center text-primary">
                ‚ú® –ú–Ω–æ–∂–∏—Ç–µ–ª–∏ –æ—á–∫–æ–≤
              </p>
              <p className="text-sm text-secondary">
                –î–ª—è —Ç–µ—Ö, –∫—Ç–æ –∏–≥—Ä–∞–µ—Ç –Ω–µ —Ä–∞–¥–∏ –ø–æ–±–µ–¥—ã, –∞ —Ä–∞–¥–∏ –≤–∞–π–±–∞.
              </p>
              <p className="text-sm text-secondary">
                –î–≤–æ–π–Ω—ã–µ –æ—á–∫–∏: 2√ó —Ç–µ–∫—Å—Ç—É—Ä—ã, 2√ó —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ. Ï´ÄÎìù-–≤–∏–±—ã –Ω–∞ –ø—Ä–µ–¥–µ–ª–µ
                –¥–æ–ø—É—Å—Ç–∏–º–æ–≥–æ —Å—á–∞—Å—Ç—å—è.
              </p>
            </>
          )}
        </div>
      </div>

      {/* Footer Row */}
      <div className="flex items-center justify-between mt-4">
        {item.type === "consumable" && (
          <p className="text-amber-400 font-medium text-base">
            –£ —Ç–µ–±—è: {ownedQuantity}
          </p>
        )}

        {isOwned && item.type === "permanent" ? (
          <div className="flex items-center text-green-400 font-semibold py-2 px-4">
            <CheckCircle className="w-5 h-5 mr-2" />
            –ö—É–ø–ª–µ–Ω–æ
          </div>
        ) : (
          <button
            onClick={() => onPurchase(item.id)}
            disabled={!canAfford || isPurchasing}
            className={`font-semibold py-2 px-4 rounded-md flex items-center justify-center transition-all ${
              canAfford
                ? "bg-yellow-400 text-black hover:bg-yellow-300"
                : "bg-gray-600 text-gray-400 cursor-not-allowed"
            }`}
            style={{
              fontFamily:
                "'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif",
            }}
          >
            {isPurchasing ? (
              <LoaderCircle className="w-5 h-5 animate-spin" />
            ) : (
              <>
                <Star className="w-4 h-4 mr-2" />
                {item.price.toLocaleString()}
              </>
            )}
          </button>
        )}
      </div>
    </div>
  );
};

export default ShopItemCard;
